[{"C:\\DEV\\reactclass\\unit7\\mobx-ff\\src\\reportWebVitals.js":"1","C:\\DEV\\reactclass\\unit7\\mobx-ff\\src\\App.js":"2","C:\\DEV\\reactclass\\unit7\\mobx-ff\\src\\Store\\index.js":"3","C:\\DEV\\reactclass\\unit7\\mobx-ff\\src\\components\\TodoEntry.js":"4","C:\\DEV\\reactclass\\unit7\\mobx-ff\\src\\components\\TodoItems.js":"5","C:\\DEV\\reactclass\\unit7\\mobx-ff\\src\\components\\TodoItem.js":"6","C:\\DEV\\reactclass\\unit7\\mobx-ff\\src\\Stores\\TodoModel.js":"7","C:\\DEV\\reactclass\\unit7\\mobx-ff\\src\\Stores\\TodoStore.js":"8","C:\\DEV\\reactclass\\unit7\\mobx-ff\\src\\components\\TodoFooter.js":"9","C:\\DEV\\reactclass\\unit7\\mobx-ff\\src\\index.js":"10"},{"size":362,"mtime":1606125589982,"results":"11","hashOfConfig":"12"},{"size":541,"mtime":1606212014743,"results":"13","hashOfConfig":"12"},{"size":635,"mtime":1606133678119,"results":"14","hashOfConfig":"12"},{"size":841,"mtime":1606146726591,"results":"15","hashOfConfig":"12"},{"size":632,"mtime":1606155208997,"results":"16","hashOfConfig":"12"},{"size":895,"mtime":1606154280473,"results":"17","hashOfConfig":"12"},{"size":526,"mtime":1606145208581,"results":"18","hashOfConfig":"12"},{"size":1184,"mtime":1606155318244,"results":"19","hashOfConfig":"12"},{"size":2384,"mtime":1606155302962,"results":"20","hashOfConfig":"12"},{"size":500,"mtime":1606125589982,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mg7lma",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\DEV\\reactclass\\unit7\\mobx-ff\\src\\reportWebVitals.js",[],"C:\\DEV\\reactclass\\unit7\\mobx-ff\\src\\App.js",[],"C:\\DEV\\reactclass\\unit7\\mobx-ff\\src\\Store\\index.js",["46"],"import { makeObservable, observable, computed, action } from \"mobx\";\r\n\r\nclass Store {\r\n\r\n    constructor(){\r\n        this.time = new Date()\r\n        this.interval = setInterval(()=>{\r\n            this.time = new Date()\r\n        }, 1000)\r\n\r\n        makeObservable(this, {\r\n            time: observable,\r\n            pauseClock: action,\r\n            startClock: action,\r\n        })\r\n    }\r\n\r\n    pauseClock(){\r\n        clearInterval(this.interval)\r\n    }\r\n\r\n    startClock(){\r\n        this.interval = setInterval(()=>{\r\n            this.time = new Date()\r\n        }, 1000)\r\n    }\r\n\r\n\r\n}\r\n\r\nconst store = new Store()\r\nexport default store","C:\\DEV\\reactclass\\unit7\\mobx-ff\\src\\components\\TodoEntry.js",[],["47","48"],"C:\\DEV\\reactclass\\unit7\\mobx-ff\\src\\components\\TodoItems.js",[],"C:\\DEV\\reactclass\\unit7\\mobx-ff\\src\\components\\TodoItem.js",[],"C:\\DEV\\reactclass\\unit7\\mobx-ff\\src\\Stores\\TodoModel.js",[],"C:\\DEV\\reactclass\\unit7\\mobx-ff\\src\\Stores\\TodoStore.js",["49"],"\r\nimport {makeObservable , observable, action, computed} from 'mobx'\r\n\r\nimport TodoModel from './TodoModel'\r\n\r\n\r\nclass TodoStore {\r\n    todos\r\n    lastID\r\n    flag\r\n\r\n    constructor() {\r\n\r\n        this.todos = []\r\n        this.lastID = 0\r\n        this.flag = 'all'\r\n\r\n\r\n        makeObservable(this, {\r\n            todos: observable,\r\n            flag: observable,\r\n\r\n            addTodo: action,\r\n\r\n            todosLeft: computed,\r\n            printable: computed,\r\n        })\r\n    }\r\n\r\n    addTodo(title) {\r\n        this.todos.push(new TodoModel(this, title, false, this.lastID ++))\r\n    }\r\n\r\n    get todosLeft() {\r\n        return(this.todos.filter(todo => todo.completed === false).length)\r\n    }\r\n\r\n    get printable() {\r\n\r\n        if (this.flag === 'all'){\r\n            return(this.todos)\r\n        } else if (this.flag === 'active') {\r\n            return(this.todos.filter(todo => todo.completed === false))\r\n        } else if (this.flag === 'completed') {\r\n            return(this.todos.filter(todo => todo.completed === true))\r\n        } else {\r\n            console.log('Printable Error')\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nconst todoStore = new TodoStore()\r\nexport default todoStore","C:\\DEV\\reactclass\\unit7\\mobx-ff\\src\\components\\TodoFooter.js",["50"],"import React, { Component } from \"react\";\r\n\r\nimport TodoItem from \"./TodoItem\";\r\nimport todoStore from \"../Stores/TodoStore\";\r\n\r\nimport { observer } from \"mobx-react\";\r\n\r\nclass TodoFooter extends Component {\r\n\r\n  clearCompletedTodos() {\r\n    todoStore.todos = todoStore.todos.filter(todo => todo.completed === false)\r\n  }\r\n\r\n  showAll() {\r\n    document.getElementById(\"all\").setAttribute('class', 'selected')\r\n    document.getElementById(\"active\").setAttribute('class', '')\r\n    document.getElementById(\"completed\").setAttribute('class', '')\r\n\r\n    todoStore.flag = 'all'\r\n\r\n\r\n  }\r\n\r\n  showActives() {\r\n    document.getElementById(\"all\").setAttribute('class', '')\r\n    document.getElementById(\"active\").setAttribute('class', 'selected')\r\n    document.getElementById(\"completed\").setAttribute('class', '')\r\n\r\n    todoStore.flag = 'active'\r\n\r\n  }\r\n\r\n  showCompleted() {\r\n    document.getElementById(\"all\").setAttribute('class', '')\r\n    document.getElementById(\"active\").setAttribute('class', '')\r\n    document.getElementById(\"completed\").setAttribute('class', 'selected')\r\n\r\n\r\n    todoStore.flag = 'completed'\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n\r\n        if (todoStore.todos.length === 0) {\r\n            return(\r\n                <div></div>\r\n            )\r\n            \r\n        }\r\n        else {\r\n            return(\r\n                <footer className=\"footer\">\r\n                <span className=\"todo-count\">\r\n                  <strong>{todoStore.todosLeft}</strong> item left\r\n                </span>\r\n        \r\n                <ul className=\"filters\">\r\n                  <li>\r\n                    <a className=\"selected\" id=\"all\" href=\"#/\" onClick={this.showAll}>\r\n                      All\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#/\" id=\"active\" onClick={this.showActives}>\r\n                      Active\r\n                      </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#/\" id=\"completed\" onClick={this.showCompleted}>\r\n                      Completed\r\n                      </a>\r\n                  </li>\r\n                </ul>\r\n        \r\n                <button className=\"clear-completed\"  onClick={this.clearCompletedTodos}>Clear completed</button>\r\n              </footer>\r\n            )\r\n        }\r\n\r\n  }\r\n}\r\n\r\nTodoFooter = observer(TodoFooter);\r\n\r\nexport default TodoFooter;\r\n","C:\\DEV\\reactclass\\unit7\\mobx-ff\\src\\index.js",[],{"ruleId":"51","severity":1,"message":"52","line":1,"column":38,"nodeType":"53","messageId":"54","endLine":1,"endColumn":46},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":38,"column":5,"nodeType":"61","messageId":"62","endLine":38,"endColumn":18},{"ruleId":"51","severity":1,"message":"63","line":3,"column":8,"nodeType":"53","messageId":"54","endLine":3,"endColumn":16},"no-unused-vars","'computed' is defined but never used.","Identifier","unusedVar","no-native-reassign",["64"],"no-negated-in-lhs",["65"],"getter-return","Expected getter 'printable' to always return a value.","FunctionExpression","expectedAlways","'TodoItem' is defined but never used.","no-global-assign","no-unsafe-negation"]